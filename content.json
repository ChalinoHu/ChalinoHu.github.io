{"meta":{"title":"HYM's blog","subtitle":null,"description":null,"author":"Chalino","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"","slug":"Git 学习笔记（一）","date":"2019-01-20T06:01:38.591Z","updated":"2019-01-20T06:38:19.724Z","comments":true,"path":"2019/01/20/Git 学习笔记（一）/","link":"","permalink":"http://yoursite.com/2019/01/20/Git 学习笔记（一）/","excerpt":"","text":"Git学习笔记（一） 下载 GIT 并安装 网址(Windows系统)： https://git-scm.com/download/win ​ 安装后在命令行输入git version 有回复表示安装成功 输入以下代码完成本地机器的注册 123$ git config --global user.name &quot;Your Name&quot;$ git config --global user.email &quot;email@example.com&quot; 创建版本库 2.1 创建一个文件夹 mkdir （默认 Administrator文件夹下 可使用 cd 命令改变当前根目录） 2.2 初始化GIT仓库 使用git init 会创建一个.git文件夹 .git文件夹即为生成的版本库 若看不到该文件夹，可使用ls - ah命令查看 目录下文件夹 添加文件到gti仓库 使用命令 git add &lt;file&gt;,注意可反复多次使用，添加多个文件 使用命令 git commit -m &lt;message&gt; 完成（如 git commit -m &quot;create a file&quot; 使用git status 随时查看当前工作区状态 如果想查看修改内容 git diff 版本回退 文件已经add到暂存区或者已经提交到本地版本库 git reset git log 查看历史版本 如果觉得文字太多在命令后面添加–pretty=oneline (git log --pretty=oneline) 看到的一大串诸如 30ef78898b0 开头的是commit id (版本记录号) 回退上一版本 git reset –hard head^ 或者 git reset --hard head~ GIT版本中使用 head 表示当前版本 上一个版本为HEAD^ ，上上个版本为HEAD^^,以此类推 回退上100个版本 git reset --hard HEAD~100 回退固定版本 git reflog 查看命令历史版本 找到版本ID b6e50d7… git reset --hard b6e50d 撤销修改 (文件修改在工作区) 本地的文件还未add到暂存区 git status 查看当前编辑的文件状态 git checkout -- &lt;file&gt; 即可撤销当前文件的修改(注意空格！！！git[空格]checkout[空格]–[空格]） 删除文件 git status 查看状态 git rm &lt;file&gt; 将版本库中的文件删除 git checkout -- &lt;file&gt;如果不小心将文件删错了，版本库中还有保存文件可恢复 git commit -m &quot;delect file&quot; 向版本库提交，保持版本一致 远程仓库 7.1 打开Git Bash 输入 ssh-keygen -t rsa -C &quot;youremail@example.com&quot; 生成SSH KEY 7.2 进入GitHub /settings/SSH and GPG Keys Title 栏下自定义标题 将用户目录下.ssh文件夹下id_rsa.pub文件中的内容复制到 KEY 7.3 添加远程库 登录GitHub 右上角Create a new repository 在repository 处填上传文件夹的名字 测试的时候我的文件夹是git_dir 其他保持默认设置 点击create repository 创建新的git 仓库 git remote add origin git@github.com:ChalinoHu/git_dir.git命令将本地库与远程库保持关联 添加后远程库的名字即为origin 第一次将本地文件推送到远程仓库 git push -u origin git push origin master将本地的文件推送到远程库 -u 将本地分支和远程库的分支关联起来 后续推送使用 git push 即可 从本地关联远程库 git remote add origin git@github.com:ChalinoHu/learngit.git 本地关联一个远程库 origin 通用的表示形式为@server-name:Path/repo-name.git server-name 服务器名一般用github Path 服务器下的路径，github 上一般为自己的用户名 repo-name 仓库名 从远程仓库克隆（先有远程库，再创建本地库） 在github上创建一个新的仓库(repository)并Initialize，此时便自动给我们创建一个README.md文件 在本地选择一个文件夹 git clone git@github.com:Chalino/gitskill2.git git clone 克隆命令 后接地址 SSH地址： *git@github.com:Path/repo-name.git* http地址: 略","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-01-18T12:24:09.535Z","updated":"2019-01-18T12:24:09.535Z","comments":true,"path":"2019/01/18/hello-world/","link":"","permalink":"http://yoursite.com/2019/01/18/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}